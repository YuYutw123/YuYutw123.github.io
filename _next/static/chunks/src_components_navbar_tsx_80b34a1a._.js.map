{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/2500488.SYSTEX/Desktop/Coding/blog/LetsGO/about/src/components/navbar.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { usePathname } from \"next/navigation\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faBars,\r\n    faTimes,\r\n    faHome,\r\n    faImages,\r\n    faUser,\r\n    IconDefinition,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface NavItem {\r\n    label: string;\r\n    href: string;\r\n    icon: IconDefinition;\r\n}\r\n\r\nconst navItemsTheme: NavItem[] = [\r\n    { label: \"Home\", href: \"/\", icon: faHome },\r\n    { label: \"About\", href: \"/about\", icon: faUser },\r\n    { label: \"Gallery\", href: \"/gallery\", icon: faImages },\r\n];\r\n\r\nexport default function Navbar() {\r\n    const pathname = usePathname();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const navItems = navItemsTheme;\r\n\r\n    const headerClasses = \"bg-white text-blue-800 shadow-blue-200 shadow-sm\";\r\n    const logoClasses = \"text-blue-600 font-bold\";\r\n\r\n    return (\r\n        <header\r\n            className={`sticky top-0 z-50 ${headerClasses} backdrop-blur-md rounded-b-md lg:px-48 px-4 md:mx-4 font-bold`}\r\n        >\r\n            <nav className=\"container mx-auto flex justify-between items-center px-4 py-3\">\r\n                {/* Logo */}\r\n                <h1 className={`text-md md:text-lg ${logoClasses}`}>\r\n                    <Link href=\"/\">YuYutw123</Link>\r\n                </h1>\r\n\r\n                {/* Right side: desktop nav + theme switch + hamburger */}\r\n                <div className=\"flex items-center gap-3 space-x-4 \">\r\n                    {/* Desktop nav */}\r\n                    <ul className=\"hidden md:flex text-sm md:text-md space-x-4 \">\r\n                        {navItems.map((item) => (\r\n                            <li key={item.href}>\r\n                                <Link\r\n                                    href={item.href}\r\n                                    className={`group flex items-center gap-2 px-2 py-1 rounded-md ${\r\n                                        pathname === item.href\r\n                                            ? \"text-gray-900\"\r\n                                            : \"text-gray-700 hover:text-gray-900\"\r\n                                    }`}\r\n                                >\r\n                                    <FontAwesomeIcon\r\n                                        icon={item.icon}\r\n                                        className={`${\r\n                                            pathname === item.href\r\n                                                ? \"text-gray-900 group-hover:text-gray-900\"\r\n                                                : \"text-gray-700 group-hover:text-gray-900\"\r\n                                        }`}\r\n                                    />\r\n                                    <span>{item.label}</span>\r\n                                </Link>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n\r\n                    {/* Mobile hamburger */}\r\n                    <button\r\n                        className=\"md:hidden text-2xl\"\r\n                        onClick={() => setMenuOpen((prev) => !prev)}\r\n                        aria-label=\"Toggle menu\"\r\n                    >\r\n                        <FontAwesomeIcon icon={menuOpen ? faTimes : faBars} />\r\n                    </button>\r\n                </div>\r\n            </nav>\r\n\r\n            {/* Sidebar (mobile) */}\r\n            <div\r\n                className={`md:hidden fixed top-0 right-0 h-[100vh] w-64 transform transition-transform duration-300 ease-in-out z-40 ${\r\n                    menuOpen ? \"translate-x-0\" : \"translate-x-full\"\r\n                } ${\"bg-gray-200 text-gray-800\"} flex flex-col`}\r\n            >\r\n                {/* Sidebar header */}\r\n                <div\r\n                    className={`flex justify-between items-center p-4 ${\r\n                        \"border-b border-gray-300\"\r\n                    }`}\r\n                >\r\n                    <h2 className=\"text-lg font-semibold\">Menu</h2>\r\n                    <button\r\n                        className=\"text-2xl\"\r\n                        onClick={() => setMenuOpen(false)}\r\n                    >\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Sidebar nav list (fills available height) */}\r\n                <ul className=\"flex-1 overflow-y-auto p-4 space-y-4 text-sm\">\r\n                    {navItems.map((item) => (\r\n                        <li key={item.href}>\r\n                            <Link\r\n                                href={item.href}\r\n                                className={`flex items-center gap-2 px-2 py-2 rounded-md transition-colors hover:bg-gray-300 duration-300 ${\r\n                                    pathname === item.href\r\n                                        ? \"bg-gray-300 text-gray-900\"\r\n                                        : \"text-gray-700 font-semibold\"\r\n                                }`}\r\n                                onClick={() => setMenuOpen(false)}\r\n                            >\r\n                                <FontAwesomeIcon icon={item.icon} />\r\n                                {item.label}\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n\r\n            </div>\r\n\r\n            {/* Overlay */}\r\n            {menuOpen && (\r\n                <div\r\n                    className=\"fixed inset-0 w-[100vw] h-[100vh] bg-black/40 z-30\"\r\n                    onClick={() => setMenuOpen(false)}\r\n                />\r\n            )}\r\n        </header>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;;;AANA;;;;;;AAqBA,MAAM,gBAA2B;IAC7B;QAAE,OAAO;QAAQ,MAAM;QAAK,MAAM,qLAAM;IAAC;IACzC;QAAE,OAAO;QAAS,MAAM;QAAU,MAAM,qLAAM;IAAC;IAC/C;QAAE,OAAO;QAAW,MAAM;QAAY,MAAM,uLAAQ;IAAC;CACxD;AAEc,SAAS;;IACpB,MAAM,WAAW,IAAA,oJAAW;IAC5B,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAC;IACzC,MAAM,WAAW;IAEjB,MAAM,gBAAgB;IACtB,MAAM,cAAc;IAEpB,qBACI,6LAAC;QACG,WAAW,AAAC,qBAAkC,OAAd,eAAc;;0BAE9C,6LAAC;gBAAI,WAAU;;kCAEX,6LAAC;wBAAG,WAAW,AAAC,sBAAiC,OAAZ;kCACjC,cAAA,6LAAC,0KAAI;4BAAC,MAAK;sCAAI;;;;;;;;;;;kCAInB,6LAAC;wBAAI,WAAU;;0CAEX,6LAAC;gCAAG,WAAU;0CACT,SAAS,GAAG,CAAC,CAAC,qBACX,6LAAC;kDACG,cAAA,6LAAC,0KAAI;4CACD,MAAM,KAAK,IAAI;4CACf,WAAW,AAAC,sDAIX,OAHG,aAAa,KAAK,IAAI,GAChB,kBACA;;8DAGV,6LAAC,4LAAe;oDACZ,MAAM,KAAK,IAAI;oDACf,WAAW,AAAC,GAIX,OAHG,aAAa,KAAK,IAAI,GAChB,4CACA;;;;;;8DAGd,6LAAC;8DAAM,KAAK,KAAK;;;;;;;;;;;;uCAjBhB,KAAK,IAAI;;;;;;;;;;0CAwB1B,6LAAC;gCACG,WAAU;gCACV,SAAS,IAAM,YAAY,CAAC,OAAS,CAAC;gCACtC,cAAW;0CAEX,cAAA,6LAAC,4LAAe;oCAAC,MAAM,WAAW,sLAAO,GAAG,qLAAM;;;;;;;;;;;;;;;;;;;;;;;0BAM9D,6LAAC;gBACG,WAAW,AAAC,6GAEoB,OAD5B,WAAW,kBAAkB,oBAChC,KAAG,6BAA4B;;kCAGhC,6LAAC;wBACG,WAAY;;0CAIZ,6LAAC;gCAAG,WAAU;0CAAwB;;;;;;0CACtC,6LAAC;gCACG,WAAU;gCACV,SAAS,IAAM,YAAY;0CAE3B,cAAA,6LAAC,4LAAe;oCAAC,MAAM,sLAAO;;;;;;;;;;;;;;;;;kCAKtC,6LAAC;wBAAG,WAAU;kCACT,SAAS,GAAG,CAAC,CAAC,qBACX,6LAAC;0CACG,cAAA,6LAAC,0KAAI;oCACD,MAAM,KAAK,IAAI;oCACf,WAAW,AAAC,iGAIX,OAHG,aAAa,KAAK,IAAI,GAChB,8BACA;oCAEV,SAAS,IAAM,YAAY;;sDAE3B,6LAAC,4LAAe;4CAAC,MAAM,KAAK,IAAI;;;;;;wCAC/B,KAAK,KAAK;;;;;;;+BAXV,KAAK,IAAI;;;;;;;;;;;;;;;;YAoB7B,0BACG,6LAAC;gBACG,WAAU;gBACV,SAAS,IAAM,YAAY;;;;;;;;;;;;AAK/C;GA7GwB;;QACH,oJAAW;;;KADR","debugId":null}}]
}